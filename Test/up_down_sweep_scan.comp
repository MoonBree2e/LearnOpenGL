#version 460 core
layout (local_size_x = 1024) in;
layout (binding = 0) buffer block1
{
	float data[];
};



shared float shared_data[gl_WorkGroupSize.x * 2];
void main()
{
	uint thid = gl_LocalInvocationID.x;
	uint offset = 1;
	uint n = gl_WorkGroupSize.x * 2;
	
	// A
	shared_data[thid * 2] = data[thid * 2];
	shared_data[thid * 2 + 1] = data[thid * 2 + 1];
	barrier();
	memoryBarrierShared();

	for(uint d = n>>1; d >0; d>>=1)
	{
		if(thid < d)
		{
			// B
			uint ai = offset * (2 * thid + 1) - 1;
			uint bi = offset * (2 * thid + 2) - 1;

			shared_data[bi] += shared_data[ai];
		}
		offset *= 2;
		barrier();
		memoryBarrierShared();
	}

	// C
	if(thid == 0) { shared_data[n-1] = 0;}

	for( uint d = 1; d < n; d *= 2)
	{
		offset >>= 1;
		barrier();
		memoryBarrierShared();

		if (thid < d)
		{
			//D
			uint ai = offset * (2 * thid + 1) - 1;
			uint bi = offset * (2 * thid + 2) - 1;

			float t = shared_data[ai];
			shared_data[ai] = shared_data[bi];
			shared_data[bi] += t;
		}
	}

	barrier();
	memoryBarrierShared();

	// E
	data[2 * thid] = shared_data[2 * thid];
	data[2 * thid + 1] = shared_data[2 * thid +1];
}