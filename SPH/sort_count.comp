#version 460 core

layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;

struct Particle {
    vec3 position;
    vec3 velocity;
    float pressure;
    float density;
};

layout(std430, binding  = 0) restrict readonly buffer Particles {
    Particle particles[];
};

layout(std430, binding = 1) buffer Counts {
    uint counts[];
};

uniform vec3 spacing;
uniform uint particleTotalNum;
uniform ivec3 gridRes;

void main() {
    const uint particleID = gl_GlobalInvocationID.x;
    if (particleID >= particleTotalNum) return;

    const vec3 p = particles[particleID].position;
    const ivec3 pGridIndex = clamp(ivec3(p / spacing), ivec3(0), gridRes -1);
    const uint index = pGridIndex.z * gridRes.y * gridRes.x + pGridIndex.y * gridRes.x + pGridIndex.x;

    atomicAdd(counts[index], 1);
}