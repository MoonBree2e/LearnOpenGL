#version 460 core
layout(local_size_x = 8, local_size_y = 4, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D screen;

void main()
{
    vec4 pixel = vec4(0.075, 0.133, 0.173, 1.0);
    ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);

    ivec2 dims = imageSize(screen);
    float x = -(float(pixel_coords.x * 2 - dims.x) / dims.x);
    float y = -(float(pixel_coords.y * 2 - dims.y) / dims.y);

    float fov = 90.f;
    vec3 cam_o = vec3(0.f, 0.f, -tan(fov / 2.f));
    vec3 ray_o = vec3(x, y, 0.f);
    vec3 ray_d = normalize(ray_o - cam_o);

    vec3 sphere_c = vec3(0.f, 0.f, -5.f);
    float sphere_r = 1.f;
    
    vec3 o_c = ray_o - sphere_c;
    float b = dot(ray_d, o_c);
    float c = dot(o_c, o_c) - sphere_r * sphere_r;
    float intersectionState = b * b - c;
    vec3 intersection = ray_o + ray_d * (-b + sqrt(b * b - c));

    if ( intersectionState >= 0.f)
    {
        pixel = vec4((normalize(intersection - sphere_c) + 1.f) / 2.f, 1.f);
    }

    imageStore(screen, pixel_coords, pixel);
}